#git aliases
alias gadog='git log --all --decorate --oneline --graph'
alias gs='git status'
alias gcan='git commit --amend --no-edit'
alias gai='git add -i'
alias gf='git fetch'
alias gcom='git checkout origin/master'
alias grom='git rebase origin/master'
alias grc='git rebase --continue'
alias gcb='git checkout -b'

#standard aliases
alias c='cd ..'
alias duthis='du -ahd 1'
alias sn='shutdown now'
alias so='source ~/.bashrc'
alias ll='ls -l'
alias ta='tmux attach'
alias ssh='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'

_ALIASES_DIR=$(cd $(dirname $BASH_SOURCE) && pwd)
_EXTRA_ALIASES="jw_aliases_extra"
alias cdjw='cd $_ALIASES_DIR'

MOZ_USE_XINPUT2=1  # enable touch scroll ff
function addAlias () {
	dest=$_ALIASES_DIR/jw_aliases
	echo "alias $1" >> $dest
}

function runjw () {
	bash $_ALIASES_DIR/go.sh -s
}

function ao () {
	pacmd set-default-sink $1
}


function tl () {
	str=$(translate $1 -s en -d pl | grep -E "\[pl\]")
	len=${#str}-5
	trans="$1 --- ${str:5:len}"
	echo $trans
	if [[ $2 != "-k" ]]; then
		echo $trans >> $HOME/translated
	fi
}

function rb () {
	$1 1>/dev/null 2>&1 &
}

function dt() {
	LINES_TO_GREP="Synaptics TrackPoint"
	opt=$1
	echo $opt
	if [[ $opt != "0" ]] && [[ $opt != "1" ]]; then
		echo "wrong argument b!itch, could be [0,1]"
		return
	fi
	ids_to_disable=""
	for line in $LINES_TO_GREP; do
		id=$(xinput list | grep $line | grep -Eo "id=[[:digit:]]{2}" | grep -Eo "[[:digit:]]{2}")
		ids_to_disable="$ids_to_disable $id"
	done
	if [[ $opt == "0" ]]; then
		arg="--disable"
	else
		arg="--enable"
	fi
	for id in $ids_to_disable; do
		xinput $arg $id
	done
}

function transme() {
	TRANSLATE_DIR=${HOME}/jw_translations
	word_to_translate=$1
	file_name=`echo ${word_to_translate} | tr ' ' '_'`
	mkdir -p ${TRANSLATE_DIR}
	trans -s en -t pl "${word_to_translate}" | tee ${TRANSLATE_DIR}/${file_name}
}

function ptransme() {
	for name in `ls ${HOME}/jw_translations`; do
		echo "${name} ---> `tail -n 1 ${HOME}/jw_translations/${name}`"
	done
}

function sshell() {
	set -e
	local SAFE_WORKSPACE_FILE_ENC="${HOME}/safe_ws.tar.gz.enc"
	local SAFE_WORKSPACE=`mktemp -d`
	local ENV=$'PS1=\e[31\;1mSAFE_SHELL\e[34m@\ \e[0m'
	local SECRET
	# DECRYPT sequence
	clear
	stty -echo  # disable typed characters
	echo 'Tell me your secrets:';
	read -r SECRET;
	stty echo
	if [[ -f "${SAFE_WORKSPACE_FILE_ENC}" ]]; then
		openssl enc -aes-256-cbc -in ${SAFE_WORKSPACE_FILE_ENC} -d -pass pass:${SECRET} -pbkdf2 -iter 100000 | tar xz -C ${SAFE_WORKSPACE}
	fi
	CMDS="
		${ENV};
		set +o history;
		clear;
		cd ${SAFE_WORKSPACE}
	"
	bash --init-file <(echo "${CMDS}")
	# END sequence
	pushd ${SAFE_WORKSPACE} > /dev/null
	if [[ -f "${SAFE_WORKSPACE}/.change-pass" ]]; then
		rm "${SAFE_WORKSPACE}/.change-pass"
		stty -echo
		echo 'Tell me your new secret:';
		read -r SECRET;
		stty echo
	fi
	tar -cz * | openssl enc -aes-256-cbc -e -pass pass:${SECRET} -pbkdf2 -iter 100000 > ${SAFE_WORKSPACE_FILE_ENC}
	popd > /dev/null
	rm -rf $SAFE_WORKSPACE
	set +e
}

function disablebeep() {
	# works for xfce
	xset b off
}

function pprog() {
	echo "mpv test.mp3 --> program to play music in terminal"
	echo "arecord -f cd test.mp3 --> record voice"
	echo "trans -s en -t pl ass --> translate"
}

###########################
# Deal with extra aliases #
###########################
function decrypt_extra_aliases() {
	local pass
	echo 'Extra aliases password:'
	read -r pass
	openssl enc -aes-256-cbc -in ${_ALIASES_DIR}/${_EXTRA_ALIASES}.enc -out ${_ALIASES_DIR}/${_EXTRA_ALIASES} -d -pass pass:${pass} -pbkdf2 -iter 100000
}

function encrypt_extra_aliases() {
	local pass
	echo 'Extra aliases password:'
	read -r pass
	openssl enc -aes-256-cbc -in ${_ALIASES_DIR}/${_EXTRA_ALIASES} -out ${_ALIASES_DIR}/${_EXTRA_ALIASES}.enc -e -pass pass:${pass} -pbkdf2 -iter 100000
}

function load_encrypted_aliases() {
	if [[ -f ${_ALIASES_DIR}/${_EXTRA_ALIASES} ]]; then
		source ${_ALIASES_DIR}/${_EXTRA_ALIASES}
	fi
}
load_encrypted_aliases

